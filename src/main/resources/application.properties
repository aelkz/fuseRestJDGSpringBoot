## ---------------------------------------------------------------------------
## Licensed to the Apache Software Foundation (ASF) under one or more
## contributor license agreements.  See the NOTICE file distributed with
## this work for additional information regarding copyright ownership.
## The ASF licenses this file to You under the Apache License, Version 2.0
## (the "License"); you may not use this file except in compliance with
## the License.  You may obtain a copy of the License at
##
##      http://www.apache.org/licenses/LICENSE-2.0
##
## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS,
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
## See the License for the specific language governing permissions and
## limitations under the License.
## ---------------------------------------------------------------------------

# DOCUMENTATION
# https://access.redhat.com/documentation/en-us/red_hat_fuse/7.2/html-single/deploying_into_spring_boot/
# https://access.redhat.com/documentation/en-us/red_hat_fuse/7.2/html-single/fuse_on_openshift_guide/

# =============================================
# springboot configurations
# ---------------------------------------------
# springboot application name
application.name=fuse-rest-infinispan-oracle-app
api.version=1
# camel application name
camel.springboot.name=${APP_NAME:blueprint-camel-app}
camel.component.servlet.mapping.context-path=/api/v${api.version}/*
camel.springboot.jmxEnabled=false
camel.springboot.stream-caching-enabled=true
# lets listen on all ports to ensure we can be invoked from the pod IP
server.address=0.0.0.0
management.address=0.0.0.0
# lets use a different management port in case you need to listen to HTTP requests on 8080
management.port=8081
logging.config=classpath:logback.xml
management.security.enabled=false

# =============================================
# springboot actuator configurations
# ---------------------------------------------
# disable all management enpoints except health
endpoints.enabled=false
endpoints.health.enabled=true
endpoints.metrics.enabled=true
# keeps the camel route alive
camel.springboot.main-run-controller=true

# =============================================
# oracle configurations
# ---------------------------------------------
# The oracle jdbc driver must be loaded inside
# application classpath or used with a custom
# docker image.
# Red Hat maven GA repository does't provide
# oracle drivers.
# ----------------------------------------------
#spring.datasource.url=jdbc:oracle:thin:@${OPENSHIFT_ORACLE_DATASOURCE_HOST}:${OPENSHIFT_ORACLE_DATASOURCE_PORT}:${OPENSHIFT_ORACLE_DATASOURCE_SID}
spring.datasource.url=${OPENSHIFT_ORACLE_DATASOURCE_URL}
spring.datasource.username=${OPENSHIFT_ORACLE_DATASOURCE_USERNAME:convenio}
spring.datasource.password=${OPENSHIFT_ORACLE_DATASOURCE_PASSWORD:convenio}
spring.datasource.driver.class=${OPENSHIFT_ORACLE_DATASOURCE_DRIVER:oracle.jdbc.driver.OracleDriver}
spring.jpa.show-sql=${OPENSHIFT_ORACLE_SHOW_SQL:true}
#spring.jpa.properties.hibernate.format_sql=true
# naming strategy
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
# hibernate config
# allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.database-platform=${OPENSHIFT_ORACLE_DATASOURCE_DIALECT:org.hibernate.dialect.Oracle10gDialect}
# drops existing tables, recreates them and executes import.sql
# Hibernate ddl auto (create, create-drop, update, validate): with "create-drop" the database
# schema will be automatically created afresh for every start of application
spring.jpa.hibernate.ddl-auto=${OPENSHIFT_ORACLE_DATASOURCE_DDL_AUTO:validate}
# hikariCP settings
spring.datasource.hikari.connection-timeout=${OPENSHIFT_ORACLE_DATASOURCE_CONNECTION_TIMEOUT:30000}
spring.datasource.hikari.maximum-pool-size=${OPENSHIFT_ORACLE_DATASOURCE_CONNECTION_POOL:50}
# keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1 FROM DUAL

# =============================================
# infinispan configurations
# ---------------------------------------------
# Infinispan service name
infinispan.service=${OPENSHIFT_INFINISPAN_SERVICE:datagrid-app-hotrod}
# Infinispan cache to use
infinispan.cacheName=${OPENSHIFT_INFINISPAN_CACHE:default}
# Configure the following properties to test the application locally
# They are overridden by environment variables inside Kubernetes
infinispan.host=${OPENSHIFT_INFINISPAN_HOST:127.0.0.1}
infinispan.port=${OPENSHIFT_INFINISPAN_PORT:11222}
# Max retries to retrieve a entry from cache
infinispan.maxRetries=${OPENSHIFT_INFINISPAN_MAX_RETRIES:3}
infinispan.entry.lifespanTime=${OPENSHIFT_INFINISPAN_ENTRY_LIFESPAN_TIME:20}
infinispan.entry.lifespanTimeUnit=${OPENSHIFT_INFINISPAN_ENTRY_LIFESPAN_TIME_UNIT:MINUTES}